<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAARBSURBVFhHzZfvb09XHMe/rQcVjd9MIhWReOBZ/x0eeyzb
        M5Flk2aVRVqRGaEIKVtQY9nYhm7za8MwFBHVX745HTZFS1Gq3+v9+p77qXNur5CobZ/kle8393POeZ17
        zr3nnFv4v0almC8WjRO0RZtvDAp9JNzEQqE0rVBIposZYmbKLDFbfCDmpPCfa+QoQ3nqUR9oizbTtl/b
        kQqxs0YVVohd4nvRKn4Tf4prokfcEQPiWcoD8ZfoEG3ijDgqfhL7xVdiuaBtHKlrTCzmLpoEDT0WT8UT
        MSgeiYcCMcL74p64K/4WtwWd0G0mRUFHuwRtXRd/iE0CBy6vjKN1qZJIhgV3ZnKT9ol/BCNgspuiWyBq
        F4zSVcFIXBTnxVnBqPAfBy6vjKN4UMn3Jf9dnBSMMC6vjMMxzyYHOmM8D7C5N4YCmDaDNpg6Oob8mNgm
        cHllHOUO2J1nJe8CnaEDv4otApdXxuHOKYmc58BGoUxlZTJUW5s8ra6Or+dAGcpSJ7zOFPBGpVOQ3wGe
        VJtzhs4YbmlJSqVSMtLVlTxesCDKhZCjDGWH9+6NcozAYbFR4PLKONxpJZHzevUbupPSwEBiMdLTkzyU
        aDSfwjVyFtTpnzBhNM/8/yg2CFxeGYdjmOxppxPGYH19+a4sXkj0QELL859rFpSlTtjGL4K37EuByyvj
        cAyTvWosLkZ55WtsHNOJPokhK6dstg3mn5X1C4HLK+Nwx5W09/xWhl5xP6cTWTllKJutz/x/K9YKXF4Z
        h2P9tkUmD5bYu5lOWHCNHGXy6jL/+8Qagcsr43DME4VZ4V4H63tfU1OqfRV9mzeXc3l14IBoEQ0Cl1fG
        4ZgnCrO80lgeRc3582DYLbhGLq8OfCd2i9UCl1fG4ZgnW9tv5NCTkTPs4XSQo0xeXbblr8XnApdXxuHY
        v8ONJaQzR15kzjPPBGUom63/jdBBIFklcHllHO4HJU1+JaBdDT7LyLslvqAc8D/sBGWpE7axRzSLzwQu
        r4zD8aCY/FJKW1VVMtTZmTbt5R0Sss1aGf5zLewEdahrZThhsRPWCVxeGYfjQbH9nJ0R2mpqRhvmt12i
        U0He4Bq5sCx1Lc+xbKtYKXB5ZRyOhQI5w8pd2WHiWkNDMtjbm1yuqytvKpbLQo4ylKUOdS23Q7ATfiJw
        eWUcjoXCTjJsTAYbCdPDShlez4MylKVOeH27YCf8WODyyjiKvKd2jOIkPF5wEOFAul5wOsbllXG0fqok
        cjvDnRDcCUs0jbBS/ixYsI4I1o1DgteXpZa3iB2PEWDj4Zni/ecUhHydWCJweWUci+cpSeN2gESOmGvI
        kCCgcZ4XpozllZFjkeE951XjaeeBY84ZdpOzCPHxgssr46gQzQtVgD3b7no85GzBy8RcgSN15QafTR8K
        N0mfU3xeGfaZFTI1w5QMk1OqXn2a0fZbfyP+Jx+n/3IUCi8BWQf+AjG+f1gAAAAASUVORK5CYII=
</value>
  </data>
</root>